plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'UMC'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    // JPA & DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.projectlombok:lombok:1.18.26'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    // Querydsl
    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

    // Spring Security
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.4.5'

    // Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Amazon S3 (NCP Object Storage)
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.232'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE' // add

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Spring Rest Docs (With MockMvc)
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // validation (add)
    implementation 'org.springframework.boot:spring-boot-starter-validation'
}

ext {
    snippetsDir = file('build/generated-snippets')
}


test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

bootJar {
    dependsOn asciidoctor

    copy {
        from "${asciidoctor.outputDir}"
        into file("src/main/resources/static/docs")
    }

    copy {
        from file("src/main/resources/static")
        into file("build/resources/main/static")
    }

    archivesBaseName = 'StockOneQ'
    archiveFileName = 'StockOneQ.jar'
    archiveVersion = "0.0.1"
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}
